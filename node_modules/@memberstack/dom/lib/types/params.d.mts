type SignupMemberEmailPasswordParams = {
    email: string;
    password: string;
    customFields?: Record<string, any>;
    metaData?: Record<string, any>;
    plans?: {
        planId: string;
    }[];
    captchaToken?: string;
};
type GetPostsParams = {
    channelKey: string;
    order?: "newest" | "oldest";
    after?: string;
    limit?: number;
};
type GetThreadsParams = {
    postId: string;
    order?: "newest" | "oldest";
    after?: string;
    limit?: number;
};
type CreatePostParams = {
    channelKey: string;
    content: string;
};
type UpdatePostParams = {
    postId: string;
    content: string;
};
type DeletePostParams = {
    postId: string;
};
type PostVoteParams = {
    postId: string;
    vote: "UP" | "DOWN" | "NONE";
};
type ThreadVoteParams = {
    threadId: string;
    vote: "UP" | "DOWN" | "NONE";
};
type CreateThreadParams = {
    postId: string;
    content: string;
};
type UpdateThreadParams = {
    threadId: string;
    content: string;
};
type DeleteThreadParams = {
    threadId: string;
};
type UpdateMemberProfileImageParams = {
    profileImage: File;
};
type GetSecureContentParams = {
    contentId: string;
};
type SetPasswordParams = {
    password: string;
};
type SignupWithProviderParams = {
    provider: string;
    customFields?: Record<string, any>;
    plans?: {
        planId: string;
    }[];
};
type LoginWithProviderParams = {
    provider: string;
};
type LoginMemberPasswordlessParams = {
    passwordlessToken: string;
    email: string;
};
type SendMemberLoginPasswordlessEmailParams = {
    email: string;
};
type SignupMemberAuthProviderParams = {
    code: string;
    provider: "GOOGLE" | "FACEBOOK";
    planId?: string;
    customFields?: Record<string, any>;
    metaData?: Record<string, any>;
    plans?: {
        planId: string;
    }[];
    payment?: {
        stripe?: {
            paymentMethodId: string;
        };
    };
};
type LoginMemberEmailPasswordParams = {
    email: string;
    password: string;
};
type UpdateMemberParams = {
    customFields?: Record<string, any>;
};
type UpdateMemberAuthParams = {
    email?: string;
    oldPassword?: string;
    newPassword?: string;
};
type PurchasePlansParams = {
    plans: {
        planId: string;
        priceId?: string;
    }[];
    payment: {
        cardId?: string;
        stripe?: {
            paymentMethodId: string;
        };
    };
};
type AddPlanParams = {
    planId: string;
};
type PurchasePlansWithCheckoutParams = {
    priceId: string;
    couponId?: string;
    cancelUrl?: string;
    successUrl?: string;
    autoRedirect?: boolean;
};
type LaunchStripeCustomerPortalParams = {
    priceIds?: string[];
    configuration?: object;
    returnUrl?: string;
    autoRedirect?: boolean;
};
type OpenStripeCustomerPortalParams = {
    configuration?: object;
    returnUrl?: string;
    autoRedirect?: boolean;
};
type RemovePlanParams = {
    planId: string;
};
type CancelPlanParams = {
    planConnectionId: string;
};
type AddMemberCardParams = {
    stripePaymentMethodId: string;
    default?: boolean;
};
type UpdateDefaultCardParams = {
    cardId: string;
};
type UpdatePlanPaymentParams = {
    planConnectionId: string;
    cardId: string;
};
type GetMemberReceiptsParams = {
    first?: number;
    after?: string;
    order?: "ASC" | "DESC";
};
type GetMemberInvoicesParams = {
    first?: number;
    after?: string;
    order?: "ASC" | "DESC";
};
type UpdateMemberJSONParams = {
    json: object;
};
type GetMemberPurchasesParams = {
    expandPlan?: boolean;
    expandPrice?: boolean;
    expandCard?: boolean;
    expandSubscription?: boolean;
};
type GetPlanParams = {
    planId: string;
};
type GetPlansParams = {
    status?: "ALL" | "ACTIVE" | "INACTIVE";
};
type SendMemberResetPasswordEmailParams = {
    email: string;
};
type ResetMemberPasswordParams = {
    token: string;
    newPassword: string;
};
type ReplacePlanParams = {
    planConnectionId: string;
    newPlanId?: string;
    priceId?: string;
    payment?: {
        cardId?: string;
        stripe?: {
            paymentMethodId: string;
        };
    };
};
type GetAuthenticationClientSecretParams = {
    planConnectionId: string;
};
type GetTotalCheckoutAmountParams = {
    priceIds: string[];
};

export { AddMemberCardParams, AddPlanParams, CancelPlanParams, CreatePostParams, CreateThreadParams, DeletePostParams, DeleteThreadParams, GetAuthenticationClientSecretParams, GetMemberInvoicesParams, GetMemberPurchasesParams, GetMemberReceiptsParams, GetPlanParams, GetPlansParams, GetPostsParams, GetSecureContentParams, GetThreadsParams, GetTotalCheckoutAmountParams, LaunchStripeCustomerPortalParams, LoginMemberEmailPasswordParams, LoginMemberPasswordlessParams, LoginWithProviderParams, OpenStripeCustomerPortalParams, PostVoteParams, PurchasePlansParams, PurchasePlansWithCheckoutParams, RemovePlanParams, ReplacePlanParams, ResetMemberPasswordParams, SendMemberLoginPasswordlessEmailParams, SendMemberResetPasswordEmailParams, SetPasswordParams, SignupMemberAuthProviderParams, SignupMemberEmailPasswordParams, SignupWithProviderParams, ThreadVoteParams, UpdateDefaultCardParams, UpdateMemberAuthParams, UpdateMemberJSONParams, UpdateMemberParams, UpdateMemberProfileImageParams, UpdatePlanPaymentParams, UpdatePostParams, UpdateThreadParams };
