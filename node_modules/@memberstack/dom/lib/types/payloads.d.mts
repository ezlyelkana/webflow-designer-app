import { Payload } from './utils/payloads.mjs';

type AppPayload = Response<Payload.Transforms["App"]>;
type GetAppAndMemberPayload = Response<Payload.Transforms["GetAppAndMember"]>;
type AddMemberCardPayload = Response<Payload.Transforms["Member"]>;
type CancelPlanPayload = Response<Payload.Transforms["Member"]>;
type RemovePlanPayload = Response<Payload.Transforms["RemovePlan"]>;
type GetCurrentMemberPayload = Response<Payload.Transforms["Member"]>;
type GetMemberJSONPayload = Response<Payload.Transforms["MemberJSON"]>;
type GetMemberCardsPayload = Response<Payload.Transforms["MemberCard"][]>;
type ConnectProviderPayload = Response<Payload.Transforms["AuthProviders"]>;
type GetMemberInvoicesPayload = PaginatedResponse<Payload.Transforms["MemberInvoice"]>;
type GetMemberReceiptsPayload = PaginatedResponse<Payload.Transforms["MemberReceipt"]>;
type UpdateMemberProfileImagePayload = Response<{
    profileImage: string;
}>;
type GetSecureContentPayload = Response<Payload.Transforms["SecureContent"]>;
type SetPasswordPayload = Response<Payload.Transforms["Member"]>;
type GetRestrictedUrlGroupsPayload = Response<Payload.Transforms["RestrictedUrlGroup"][]>;
type GetPlansPayload = Response<Payload.Transforms["Plan"][]>;
type GetPlanPayload = Response<Payload.Transforms["Plan"]>;
type LoginMemberEmailPasswordPayload = Response<Payload.Transforms["MemberAuth"]>;
type SendMemberLoginPasswordlessEmailPayload = Response<{
    success: boolean;
}>;
type LogoutMemberPayload = Response<{
    redirect?: string;
}>;
type PurchasePlansPayload = Response<Payload.Transforms["Purchase"]>;
type AddPlanPayload = Response<Payload.Transforms["AddPlan"]>;
type PurchasePlansWithCheckoutPayload = Response<Payload.Transforms["PurchaseWithCheckout"]>;
type LaunchStripeCustomerPortalPayload = Response<Payload.Transforms["LaunchStripeCustomerPortal"]>;
type OpenStripeCustomerPortalPayload = Response<Payload.Transforms["OpenStripeCustomerPortal"]>;
type SignupMemberEmailPasswordPayload = Response<Payload.Transforms["MemberAuth"]>;
type SignupMemberAuthProviderPayload = Response<Payload.Transforms["MemberAuth"]>;
type UpdateDefaultCardPayload = Response<Payload.Transforms["Member"]>;
type UpdateMemberAuthPayload = Response<Payload.Transforms["Member"]>;
type UpdateMemberPayload = Response<Payload.Transforms["Member"]>;
type UpdatePlanPaymentPayload = Response<Payload.Transforms["Member"]>;
type RefreshMemberTokensPayload = Response<Payload.Transforms["MemberAuth"]["tokens"]>;
type SendMemberResetPasswordEmailPayload = Response<string>;
type ReplacePlanPayload = Response<Payload.Transforms["Purchase"]>;
type GetAuthProvidersPayload = Response<Payload.Transforms["AuthProvider"][]>;
type GetTotalCheckoutAmountPayload = Response<Payload.Transforms["TotalCheckoutAmount"]>;
type GetAuthenticationClientSecretPayload = Response<Payload.Transforms["AuthenticationClientSecret"]>;
type SendMemberVerificationEmailPayload = Response<Payload.Transforms["SendMemberVerificationEmail"]>;
type ResetMemberPassworPayload = Response<Payload.Transforms["ResetMemberPassword"]>;
type GetPostsPayload = Response<Payload.Transforms["Posts"]>;
type GetThreadsPayload = Response<Payload.Transforms["Threads"]>;
type CreatePostPayload = Response<Payload.Transforms["Post"]>;
type CreateThreadPayload = Response<Payload.Transforms["Thread"]>;
type UpdatePostPayload = Response<Payload.Transforms["Post"]>;
type UpdateThreadPayload = Response<Payload.Transforms["Thread"]>;
type PaginatedResponse<T> = {
    hasNext: boolean;
    endCursor: string | null;
    totalCount: number;
    data: T[];
};
type Response<T> = {
    data: T;
};

export { AddMemberCardPayload, AddPlanPayload, AppPayload, CancelPlanPayload, ConnectProviderPayload, CreatePostPayload, CreateThreadPayload, GetAppAndMemberPayload, GetAuthProvidersPayload, GetAuthenticationClientSecretPayload, GetCurrentMemberPayload, GetMemberCardsPayload, GetMemberInvoicesPayload, GetMemberJSONPayload, GetMemberReceiptsPayload, GetPlanPayload, GetPlansPayload, GetPostsPayload, GetRestrictedUrlGroupsPayload, GetSecureContentPayload, GetThreadsPayload, GetTotalCheckoutAmountPayload, LaunchStripeCustomerPortalPayload, LoginMemberEmailPasswordPayload, LogoutMemberPayload, OpenStripeCustomerPortalPayload, PurchasePlansPayload, PurchasePlansWithCheckoutPayload, RefreshMemberTokensPayload, RemovePlanPayload, ReplacePlanPayload, ResetMemberPassworPayload, SendMemberLoginPasswordlessEmailPayload, SendMemberResetPasswordEmailPayload, SendMemberVerificationEmailPayload, SetPasswordPayload, SignupMemberAuthProviderPayload, SignupMemberEmailPasswordPayload, UpdateDefaultCardPayload, UpdateMemberAuthPayload, UpdateMemberPayload, UpdateMemberProfileImagePayload, UpdatePlanPaymentPayload, UpdatePostPayload, UpdateThreadPayload };
