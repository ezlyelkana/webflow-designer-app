var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/cookies.ts
var cookies_exports = {};
__export(cookies_exports, {
  getMemberToken: () => getMemberToken,
  removeMemberToken: () => removeMemberToken,
  setMemberToken: () => setMemberToken,
  setMemberTokenIfAvailable: () => setMemberTokenIfAvailable,
  setUseCookies: () => setUseCookies
});
module.exports = __toCommonJS(cookies_exports);
var import_js_cookie = __toESM(require("js-cookie"));
var memberAuthTokenName = "_ms-mid";
function isLocalStorageAvailable() {
  try {
    localStorage.setItem("test", "test");
    localStorage.removeItem("test");
    return true;
  } catch (e) {
    return false;
  }
}
var localStorageAvailable = isLocalStorageAvailable();
var useCookies = false;
var setCookieOnRootDomain = false;
var setUseCookies = (setCookieOnRoot) => {
  useCookies = true;
  if (setCookieOnRoot)
    setCookieOnRootDomain = true;
};
var setMemberToken = (token, expires) => {
  if (localStorageAvailable && !useCookies) {
    localStorage.setItem(memberAuthTokenName, token);
  } else {
    const domain = window.location.hostname.split(".").slice(-2).join(".");
    import_js_cookie.default.set(memberAuthTokenName, token, __spreadValues({
      expires: expires && Number(expires) || 14,
      sameSite: "strict"
    }, setCookieOnRootDomain && { domain }));
  }
};
var removeMemberToken = () => {
  if (localStorageAvailable) {
    localStorage.removeItem(memberAuthTokenName);
  }
  const domain = window.location.hostname.split(".").slice(-2).join(".");
  import_js_cookie.default.set(memberAuthTokenName, "", __spreadValues({
    expires: -1,
    sameSite: "strict"
  }, setCookieOnRootDomain && { domain }));
  import_js_cookie.default.set(memberAuthTokenName, "", {
    expires: -1,
    sameSite: "strict"
  });
};
var getMemberToken = () => {
  if (localStorageAvailable && !useCookies) {
    const memAuthToken = localStorage.getItem(memberAuthTokenName);
    if (memAuthToken)
      return memAuthToken;
  }
  return import_js_cookie.default.get(memberAuthTokenName);
};
var setMemberTokenIfAvailable = () => {
  if (typeof window !== "undefined") {
    const urlParams = new URLSearchParams(window.location.search);
    const memberToken = urlParams.get("memberToken");
    if (memberToken)
      setMemberToken(memberToken);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getMemberToken,
  removeMemberToken,
  setMemberToken,
  setMemberTokenIfAvailable,
  setUseCookies
});
