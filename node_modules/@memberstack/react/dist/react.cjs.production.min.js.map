{"version":3,"file":"react.cjs.production.min.js","sources":["../src/context/MemberstackProvider.tsx","../src/context/MemberstackProtected.tsx","../src/hooks/useAuth.tsx","../src/hooks/useMemberstack.tsx","../src/utils/index.ts","../src/hooks/useMemberstackModal/index.tsx","../src/components/modal.tsx","../src/components/control/auth.tsx","../src/index.tsx","../src/hooks/payments/useCheckout.tsx","../src/hooks/payments/useCustomerPortal.tsx","../src/hooks/useMember.tsx"],"sourcesContent":["import React from \"react\";\nimport msDom from \"@memberstack/dom\";\n\ndeclare global {\n  interface Window { __MSDOM: any; }\n}\n\ntype Config = Parameters<typeof msDom[\"init\"]>;\n\ninterface MemberstackProviderProps {\n  config: Config[0];\n  children: JSX.Element | JSX.Element[];\n}\n\nconst MemberstackContext = React.createContext<{\n  memberstack: null | ReturnType<typeof msDom[\"init\"]>;\n}>({ memberstack: null });\n\nexport const useMemberstackContext = () => {\n  return React.useContext(MemberstackContext);\n};\n\nexport const MemberstackProvider = (props: MemberstackProviderProps) => {\n  const memberstack = msDom.init(props.config);\n\n  React.useEffect(() => {\n    const loader = setInterval(() => {\n      if (!window.__MSDOM?.load && !document.getElementById(\"_ms-iframe\")) {\n        window.__MSDOM?.load({ publicKey: (props.config as { publicKey: string }).publicKey });\n      } else {\n        clearInterval(loader);\n      }\n    }, 200);\n\n    return () => clearInterval(loader);\n  }, []);\n\n  return (\n    <MemberstackContext.Provider value={{ memberstack }}>\n      {props.children}\n    </MemberstackContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { useMemberstack } from \"../hooks/useMemberstack\";\n\ninterface MemberstackProtectedProps {\n  allow?: {\n    permissions?: string[];\n    plans?: string[];\n  };\n  onUnauthorized?: (x?: any) => any | JSX.Element | JSX.Element[];\n  children: JSX.Element | JSX.Element[];\n  fallback?: JSX.Element | JSX.Element[];\n}\n\nenum State {\n  LOADING = \"LOADING\",\n  UNAUTHORIZED = \"UNAUTHORIZED\",\n  AUTHORIZED = \"AUTHORIZED\",\n}\n\nexport const MemberstackProtected = (props: MemberstackProtectedProps) => {\n  const memberstack = useMemberstack();\n  const [state, setState] = React.useState(State.LOADING);\n\n  if (!memberstack) {\n    throw new Error(\"<MemberstackProtected> can only be used within <MemberstackProvider>\");\n  }\n\n  function getMemberAuthorization(member) {\n    if (!member) {\n      setState(State.UNAUTHORIZED);\n      return;\n    }\n\n    const { permissions, plans } = props.allow || {};\n\n    if (permissions?.length) {\n      if (!permissions.some((per) => (member?.permissions as string[])?.includes(per))) {\n        setState(State.UNAUTHORIZED);\n        return;\n      }\n    }\n\n    if (plans?.length) {\n      if (!plans.some((planId) => member?.planConnections?.find((con) => con.planId === planId))) {\n        setState(State.UNAUTHORIZED);\n        return;\n      }\n    }\n\n    setState(member ? State.AUTHORIZED : State.UNAUTHORIZED);\n  }\n\n  async function getMember() {\n    const { data: member } = await memberstack.getCurrentMember();\n    getMemberAuthorization(member);\n  }\n\n  React.useEffect(() => {\n    let isMounted = true;\n    let listener;\n\n    if (isMounted) {\n      listener = memberstack?.onAuthChange(getMemberAuthorization);\n      getMember();\n    }\n\n    return () => {\n      isMounted = false;\n      listener?.unsubscribe();\n    };\n  }, []);\n\n  switch (state) {\n    case State.LOADING:\n      return props.fallback || null;\n\n    case State.AUTHORIZED:\n      return props.children;\n\n    case State.UNAUTHORIZED:\n      if (React.isValidElement(props.onUnauthorized)) {\n        return props.onUnauthorized;\n      }\n\n      if (typeof props.onUnauthorized === \"function\") {\n        props.onUnauthorized();\n      }\n\n      return null;\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\nimport { useMemberstack } from \"./useMemberstack\";\n\nexport enum State {\n  LOADING = \"LOADING\",\n  UNAUTHORIZED = \"UNAUTHORIZED\",\n  AUTHORIZED = \"AUTHORIZED\",\n}\n\nexport const useAuth = () => {\n  const memberstack = useMemberstack();\n  const [auth, setAuth] = React.useState<any>(null);\n\n  function getMemberAuthorization(currentMember: any) {\n    currentMember\n      ? setAuth({\n          userId: currentMember.id,\n          status: State.AUTHORIZED,\n        })\n      : setAuth({\n          userId: null,\n          status: State.UNAUTHORIZED,\n        });\n    return;\n  }\n\n  async function getMember() {\n    const { data: currentMember } = await memberstack.getCurrentMember();\n    getMemberAuthorization(currentMember);\n  }\n\n  React.useEffect(() => {\n    let isMounted = true;\n    let listener;\n\n    if (isMounted) {\n      listener = memberstack?.onAuthChange(getMemberAuthorization);\n      getMember();\n    }\n\n    return () => {\n      isMounted = false;\n      listener?.unsubscribe();\n    };\n  }, []);\n\n  return {\n    ...auth,\n    isLoggedIn: auth?.status === State.AUTHORIZED,\n    getToken: () => memberstack.getMemberCookie(),\n    signOut: async () => await memberstack.logout(),\n  };\n};\n","import { useMemberstackContext } from \"../context/MemberstackProvider\";\n\nexport const useMemberstack = () => {\n  const { memberstack } = useMemberstackContext();\n\n  if (!memberstack) {\n    throw new Error(\"useMemberstack can only be used within <MemberstackProvider>\");\n  }\n\n  return memberstack;\n};\n","// if includeFalseVals is true, then the returned array will\n// include false values and zero values || exclude undefined and null values\n// otherwise, it will only return truthy values.\n\ninterface IFilterNullableValues {\n  includeFalseVals?: boolean;\n}\n\nexport const filterNullableValues = (\n  obj: any,\n  { includeFalseVals = false }: IFilterNullableValues = {}\n) =>\n  Object.entries(obj)\n    .filter(([, y]) => (includeFalseVals ? y !== null && y !== undefined : y))\n    .reduce((acc, cur) => ({ ...acc, [cur[0]]: cur[1] }), {});\n","import React from \"react\";\nimport { useMemberstack } from \"../useMemberstack\";\nimport { filterNullableValues } from \"../../utils\";\n// import { useMutationObservable } from \"./useMutationObservable\";\n\nexport interface ModalMethods {\n  onCompleted?: (x: any) => any;\n  onError?: (x: { code: string; message: string }) => any;\n}\n\nexport interface ForgotModalProps {\n  type: \"FORGOT_PASSWORD\";\n}\n\nexport interface LoginModalProps {\n  type: \"LOGIN\";\n  planId?: string;\n  priceId?: string;\n}\n\nexport interface SignupModalProps {\n  type: \"SIGNUP\";\n  planId?: string;\n  priceId?: string;\n}\n\nexport interface ProfileModalProps {\n  type: \"PROFILE\";\n}\n\nexport const useMemberstackModal = () => {\n  const memberstack = useMemberstack();\n\n  const config = React.useRef(null);\n  const [show, setShow] = React.useState(false);\n\n  function openModal(\n    openModalProps?: (ForgotModalProps | LoginModalProps | SignupModalProps | ProfileModalProps) &\n      ModalMethods\n  ) {\n    config.current = filterNullableValues({\n      ...config.current,\n      type: openModalProps.type,\n      planId: (openModalProps as LoginModalProps | SignupModalProps).planId,\n      priceId: (openModalProps as LoginModalProps | SignupModalProps).priceId,\n      onCompleted: openModalProps.onCompleted,\n      onError: openModalProps.onError,\n    });\n\n    setShow(true);\n    // @ts-ignore\n    //if (!loaded || visible) return;\n\n    return memberstack.openModal(\n      config.current.type,\n      filterNullableValues({\n        planId: config.current.planId,\n        priceId: config.current.priceId,\n      })\n      // filterNullableValues({\n      //   onCompleted: config.current.onCompleted,\n      //   onError: config.current.onError,\n      // })\n    );\n  }\n\n  function hideModal() {\n    setShow(false);\n    return memberstack.hideModal();\n  }\n\n  return {\n    openModal,\n    hideModal,\n  };\n};\n","import React from \"react\";\nimport {\n  useMemberstackModal,\n  ModalMethods,\n  SignupModalProps,\n  LoginModalProps,\n  ProfileModalProps,\n  ForgotModalProps,\n} from \"../hooks/useMemberstackModal\";\n\nexport interface ModalType {\n  type: \"LOGIN\" | \"SIGNUP\" | \"FORGOT_PASSWORD\" | \"PROFILE\";\n}\n\nconst modalFactory = ({ type }: ModalType) => {\n  return function ModalComponent(\n    props: (LoginModalProps | SignupModalProps | ProfileModalProps | ForgotModalProps) &\n      ModalMethods\n  ) {\n    const { openModal, hideModal } = useMemberstackModal();\n    React.useEffect(() => {\n      openModal({\n        type,\n        planId: (props as LoginModalProps | SignupModalProps).planId,\n        priceId: (props as LoginModalProps | SignupModalProps).priceId\n      }).then(({ data, type }) => hideModal());\n    }, []);\n\n    return null;\n  };\n};\n\nexport const SignInModal = modalFactory({ type: \"LOGIN\" });\nexport const SignUpModal = modalFactory({ type: \"SIGNUP\" });\nexport const ProfileModal = modalFactory({ type: \"PROFILE\" });\n","import React from \"react\";\nimport { useAuth, State } from \"../../hooks/useAuth\";\n\ninterface AuthLogicProps {\n  children: JSX.Element | JSX.Element[];\n  fallback?: JSX.Element | JSX.Element[];\n}\n\nconst logicWrapper = (fn: (x: any) => any) => {\n  return function LogicWrapper(props: AuthLogicProps) {\n    const auth = useAuth();\n    const condition = React.useMemo(() => fn(auth), [auth]);\n    if (auth.status === State.LOADING) {\n      return props.fallback || null;\n    }\n    return condition ? props.children : null;\n  };\n};\n\nexport const LoggedIn = logicWrapper((auth) => auth.isLoggedIn);\nexport const LoggedOut = logicWrapper((auth) => !auth.isLoggedIn);\n","console.log(\"Memberstack React has initialized\");\nexport { MemberstackProvider } from \"./context/MemberstackProvider\";\nexport { MemberstackProtected } from \"./context/MemberstackProtected\";\nexport {\n  useAuth,\n  useMember,\n  useMemberstack,\n  useMemberstackModal,\n  useCheckout,\n  useCustomerPortal,\n} from \"./hooks\";\nexport { SignInModal, SignUpModal, ProfileModal } from \"./components/modal\";\nexport { LoggedIn, LoggedOut } from \"./components/control/auth\";\n","import { useMemberstack } from \"../useMemberstack\";\nimport { filterNullableValues } from \"../../utils\";\n\nexport type PurchasePlansWithCheckoutParams = {\n  priceId: string;\n  cancelUrl?: string;\n  successUrl?: string;\n  autoRedirect?: boolean;\n};\n\nexport const useCheckout = () => {\n  const memberstack = useMemberstack();\n\n  const checkout = async (params: PurchasePlansWithCheckoutParams) =>\n    await memberstack.purchasePlansWithCheckout(\n      //@ts-ignore\n      filterNullableValues(\n        {\n          priceId: params.priceId,\n          cancelUrl: params.cancelUrl,\n          successUrl: params.successUrl,\n          autoRedirect: params.autoRedirect,\n        },\n        { includeFalseVals: true }\n      )\n    );\n\n  return checkout;\n};\n","import { useMemberstack } from \"../useMemberstack\";\nimport { filterNullableValues } from \"../../utils\";\n\nexport type LaunchStripeCustomerPortalParams = {\n  priceIds: string[];\n  returnUrl?: string;\n  autoRedirect?: boolean;\n};\n\nexport const useCustomerPortal = (params: LaunchStripeCustomerPortalParams) => {\n  const memberstack = useMemberstack();\n\n  const launchPortal = async () =>\n    await memberstack.launchStripeCustomerPortal(\n      //@ts-ignore\n      filterNullableValues(\n        {\n          priceIds: params.priceIds,\n          returnUrl: params.returnUrl,\n          autoRedirect: params.autoRedirect,\n        },\n        { includeFalseVals: true }\n      )\n    );\n\n  return launchPortal;\n};\n","import React from \"react\";\nimport { useMemberstack } from \"./useMemberstack\";\n\nexport const useMember = () => {\n  const memberstack = useMemberstack();\n  const [member, setMember] = React.useState<any>(null);\n  const [memberJSON, setMemberJSON] = React.useState<any>(null);\n\n  async function getMember() {\n    try {\n      const { data: currentMember } = await memberstack.getCurrentMember();\n      currentMember ? setMember(currentMember) : setMember(null);\n      const { data: jsonData } = await memberstack.getMemberJSON();\n      jsonData ? setMemberJSON(jsonData?.json) : setMemberJSON(null);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  React.useEffect(() => {\n    getMember();\n  }, []);\n\n  return {\n    member,\n    memberJSON,\n    updateEmail: async (email: string) => await memberstack.updateMemberAuth({ email }),\n    updatePassword: async (oldPassword: string, newPassword: string) =>\n      await memberstack.updateMemberAuth({ oldPassword, newPassword }),\n    updateMetadata: async (metaData: any) => await memberstack.updateMember({ metaData }),\n    updateCustomFields: async (customFields: any) =>\n      await memberstack.updateMember({ customFields }),\n    updateMemberJSON: async (json: object) => await memberstack.updateMemberJSON({ json }),\n  };\n};\n"],"names":["MemberstackContext","React","createContext","memberstack","State","useMemberstack","useContext","Error","useAuth","useState","auth","setAuth","getMemberAuthorization","currentMember","userId","id","status","AUTHORIZED","UNAUTHORIZED","_context2","getCurrentMember","data","useEffect","listener","isMounted","onAuthChange","getMember","unsubscribe","isLoggedIn","getToken","getMemberCookie","signOut","_context","logout","filterNullableValues","obj","includeFalseVals","Object","entries","filter","y","reduce","acc","cur","useMemberstackModal","config","useRef","show","openModal","openModalProps","current","type","planId","priceId","onCompleted","onError","setShow","hideModal","modalFactory","props","then","SignInModal","SignUpModal","ProfileModal","logicWrapper","fn","condition","useMemo","LOADING","fallback","children","LoggedIn","LoggedOut","console","log","state","setState","member","allow","permissions","plans","length","some","per","_member$permissions","includes","planConnections","_member$planConnectio","find","con","isValidElement","onUnauthorized","msDom","init","loader","setInterval","window","__MSDOM","_window$__MSDOM","load","document","getElementById","clearInterval","publicKey","Provider","value","params","purchasePlansWithCheckout","cancelUrl","successUrl","autoRedirect","launchStripeCustomerPortal","priceIds","returnUrl","setMember","memberJSON","setMemberJSON","_context6","getMemberJSON","jsonData","json","updateEmail","email","updateMemberAuth","updatePassword","oldPassword","newPassword","updateMetadata","metaData","_context3","updateMember","updateCustomFields","customFields","_context4","updateMemberJSON","_context5"],"mappings":"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"}